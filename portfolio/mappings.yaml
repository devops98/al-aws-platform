# TODO:
#   Rules and constraints / Roles and notifications seems to be a nice feature
#   How to cleanup the stacks?
name: ALCloud
description: Automation logic R&D
owner: Automation Logic
# Template Path within the cloudformation/portfolio/ folder.
# Owner within Products Key needs to be an email address.
products:
  - name: CloudPlatform-Demo
    template: cloudplatform/ubuntu/node-sql/cloudplatform.yaml
    owner: info@automationlogic.com
    description: Creates a ready-to-use infrastructure for your NodeJS App
    constraints:
      - description: Enforce Cleanup
        rules: |
          {
            "Rules": {
              "Cleanup": {
                "Assertions": [
                  {
                    "Assert": {
                      "Fn::Equals": [
                        "Enable",
                        {
                          "Ref": "Cleanup"
                        }
                      ]
                    },
                    "AssertDescription": "Ensures no resources remain in account after a version of this product is deleted"
                  }
                ]
              }
            }
          }
      - description: Instance Size Constraints
        rules: |
          {
            "Rules": {
              "DB Instance Size": {
                "Assertions": [
                  {
                    "Assert": {
                      "Fn::Equals": [
                        "db.t2.large",
                        {
                          "Ref": "DBClass"
                        }
                      ]
                    },
                    "AssertDescription": "Limits DB instance sizes used for development"
                  }
                ]
              },
              "EC2 Instance Size": {
                "Assertions": [
                  {
                    "Assert": {
                      "Fn::Contains": [
                        [
                          "t2.micro",
                          "m3.medium",
                          "m3.large"
                        ],
                        {
                          "Ref": "InstanceType"
                        }
                      ]
                    },
                    "AssertDescription": "Limits instance sizes used for development"
                  }
                ]
              }
            }
          }
  - name: CentralLogging
    template: central-logging/central-logging-elasticsearch.yaml
    owner: info@automationlogic.com
    description: Creates a Standalone Elastic Search cluster to use with central logging.
  - name: Windows-CloudPlatform
    template: cloudplatform/windows/asp.net-sqlserver/cloudplatform.yaml
    owner: info@automationlogic.com
    description: Creates a ready-to-use infrastructure for your .NET App
    constraints:
      - description: DB Instance Size Constraints
        rules: |
          {
            "Rules": {
              "dbWebInstanceSizes": {
                "RuleCondition": {
                  "Fn::Equals": [{"Ref": "DBEngine"},"sqlserver-web"]
                },
                "Assertions": [
                  {
                    "Assert": {
                      "Fn::Contains": [["db.t2.small","db.t2.medium","db.m4.large","db.m4.xlarge","db.m4.2xlarge","db.m4.4xlarge"],{"Ref": "DBClass"}]},
                    "AssertDescription": "Ensures only SQLServer Web compatible instance classes are available, if the engine is chosen."
                  }
                ]
              },
              "dbSEInstanceSizes": {
                "RuleCondition": {
                  "Fn::Equals": [{"Ref": "DBEngine"},"sqlserver-se"]
                },
                "Assertions": [
                  {
                    "Assert": {
                      "Fn::Contains": [["db.m4.large","db.m4.xlarge","db.m4.2xlarge","db.m4.4xlarge"],{"Ref": "DBClass"}]},
                    "AssertDescription": "Ensures only SQLServer SE compatible instance classes are available, if the engine is chosen."
                  }
                ]
              },
              "dbEEInstanceSizes": {
                "RuleCondition": {
                  "Fn::Equals": [{"Ref": "DBEngine"},"sqlserver-ee"]
                },
                "Assertions": [
                  {
                    "Assert": {
                      "Fn::Contains": [["db.m4.xlarge","db.m4.2xlarge","db.m4.4xlarge","db.m4.10xlarge","db.r3.xlarge","db.r3.2xlarge","db.r3.4xlarge","db.r3.8xlarge"],{"Ref": "DBClass"}]},
                    "AssertDescription": "Ensures only SQLServer EE compatible instance classes are available, if the engine is chosen."
                  }
                ]
              }
            }
          }
  - name: Java-CloudPlatform
    template: cloudplatform/amazonlinux/java-auroradb/cloudplatform.yaml
    owner: info@automationlogic.com
    description: Creates a ready to use infrastructure for your Java App
  - name: Rails-CloudPlatform
    template: cloudplatform/ubuntu/mongo-rails/cloudplatform.yaml
    owner: info@automationlogic.com
    description: Creates a ready-to-use infrastructure for your Rails App
  - name: Django-CloudPlatform
    template: cloudplatform/ubuntu/django-neo4j/cloudplatform.yaml
    owner: info@automationlogic.com
    description: Creates a ready-to-use infrastructure for your Django App with a Neo4j backend
accounts:
  - identifier: AL
    number: 505076813643
# Place Holder for tags. The Sync Lambda expects some tags values which is the reason behind the following tags block being present in this mappings file.
tags:
  - Key: keyname1
    Value: value1
  - Key: keyname2
    Value: value2
principals:
  - 'arn:aws:iam::505076813643:group/PDCatalog'
  - 'arn:aws:iam::505076813643:group/PDAdmin'
